
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightasignacionleftorleftandleftmenormenorIgualmayormayorIgualleftigualdesigualleftmasmenosleftmuldivmodrightnotrightumenosComentarios SaltoLinea Vec and as asignacion bool cadena car char coma corA corC ddosptos desigual div dosptos entero f64 false float fn i64 id igual let llavA llavC main mas mayor mayorIgual menor menorIgual menos mod mul mut new not or parA parC pow powf print ptocoma str string struct true vecINICIO : SENTENCIAS\n        SENTENCIAS : SENTENCIAS SENTENCIA \n                      | SENTENCIA\n        SENTENCIA : DMAIN \n        DMAIN : fn main parA parC llavA INSTRUCCIONES llavC \n        INSTRUCCIONES : INSTRUCCIONES INSTRUCCION \n                      | INSTRUCCION\n        INSTRUCCION : PRINT\n        PRINT : print parA cadena parC ptocoma\n        PRINT : print parA cadena coma PVALORES parC ptocoma\n        PVALORES : PVALORES coma EXPRESION\n                    | EXPRESION\n        EXPRESION : EXPRESION mas EXPRESION\n        EXPRESION : EXPRESION menos EXPRESION\n        EXPRESION : EXPRESION mul EXPRESION\n        EXPRESION : EXPRESION div EXPRESION\n        EXPRESION : EXPRESION mod EXPRESION\n        EXPRESION :  i64 ddosptos pow parA EXPRESION coma EXPRESION parC\n        EXPRESION :  f64 ddosptos powf parA EXPRESION coma EXPRESION parC\n        EXPRESION :  menos EXPRESION %prec umenos\n        EXPRESION :  parA EXPRESION parC\n        EXPRESION :  EXPRESION igual EXPRESION\n        EXPRESION :  EXPRESION desigual EXPRESION\n        EXPRESION :  EXPRESION menor EXPRESION\n        EXPRESION :  EXPRESION menorIgual EXPRESION\n        EXPRESION :  EXPRESION mayor EXPRESION\n        EXPRESION :  EXPRESION mayorIgual EXPRESION\n        EXPRESION :  EXPRESION or EXPRESION\n        EXPRESION :  EXPRESION and EXPRESION\n        EXPRESION :  not  EXPRESION\n        EXPRESION :  entero\n        EXPRESION :  float\n        EXPRESION :  true\n        EXPRESION :  false\n        EXPRESION : cadena\n        EXPRESION :  car\n        EXPRESION :  id\n        EXPRESION : EXPRESION as TIPO\n        TIPO : i64\n        TIPO : f64\n        TIPO : bool\n        TIPO : char\n        TIPO : str\n        TIPO : string\n        '
    
_lr_action_items = {'fn':([0,2,3,4,6,15,],[5,5,-3,-4,-2,-5,]),'$end':([1,2,3,4,6,15,],[0,-1,-3,-4,-2,-5,]),'main':([5,],[7,]),'parA':([7,14,20,22,26,29,37,39,40,41,42,43,44,45,46,47,48,49,50,51,80,81,82,83,86,87,],[8,17,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,82,83,22,22,22,22,]),'parC':([8,18,23,24,25,30,31,32,33,34,35,36,53,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,88,89,90,91,],[9,19,-35,38,-12,-31,-32,-33,-34,-36,-37,57,-20,-30,-21,-11,-13,-14,-15,-16,-17,-22,-23,-24,-25,-26,-27,-28,-29,-38,-39,-40,-41,-42,-43,-44,90,91,-18,-19,]),'llavA':([9,],[10,]),'print':([10,11,12,13,16,21,59,],[14,14,-7,-8,-6,-9,-10,]),'llavC':([11,12,13,16,21,59,],[15,-7,-8,-6,-9,-10,]),'cadena':([17,20,22,26,29,37,39,40,41,42,43,44,45,46,47,48,49,50,51,82,83,86,87,],[18,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'coma':([18,23,24,25,30,31,32,33,34,35,53,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,84,85,90,91,],[20,-35,37,-12,-31,-32,-33,-34,-36,-37,-20,-30,-21,-11,-13,-14,-15,-16,-17,-22,-23,-24,-25,-26,-27,-28,-29,-38,-39,-40,-41,-42,-43,-44,86,87,-18,-19,]),'ptocoma':([19,38,],[21,59,]),'i64':([20,22,26,29,37,39,40,41,42,43,44,45,46,47,48,49,50,51,52,82,83,86,87,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,74,27,27,27,27,]),'f64':([20,22,26,29,37,39,40,41,42,43,44,45,46,47,48,49,50,51,52,82,83,86,87,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,75,28,28,28,28,]),'menos':([20,22,23,25,26,29,30,31,32,33,34,35,36,37,39,40,41,42,43,44,45,46,47,48,49,50,51,53,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,82,83,84,85,86,87,88,89,90,91,],[26,26,-35,40,26,26,-31,-32,-33,-34,-36,-37,40,26,26,26,26,26,26,26,26,26,26,26,26,26,26,-20,-30,-21,40,-13,-14,-15,-16,-17,40,40,40,40,40,40,40,40,-38,-39,-40,-41,-42,-43,-44,26,26,40,40,26,26,40,40,-18,-19,]),'not':([20,22,26,29,37,39,40,41,42,43,44,45,46,47,48,49,50,51,82,83,86,87,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'entero':([20,22,26,29,37,39,40,41,42,43,44,45,46,47,48,49,50,51,82,83,86,87,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'float':([20,22,26,29,37,39,40,41,42,43,44,45,46,47,48,49,50,51,82,83,86,87,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'true':([20,22,26,29,37,39,40,41,42,43,44,45,46,47,48,49,50,51,82,83,86,87,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'false':([20,22,26,29,37,39,40,41,42,43,44,45,46,47,48,49,50,51,82,83,86,87,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'car':([20,22,26,29,37,39,40,41,42,43,44,45,46,47,48,49,50,51,82,83,86,87,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'id':([20,22,26,29,37,39,40,41,42,43,44,45,46,47,48,49,50,51,82,83,86,87,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'mas':([23,25,30,31,32,33,34,35,36,53,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,84,85,88,89,90,91,],[-35,39,-31,-32,-33,-34,-36,-37,39,-20,-30,-21,39,-13,-14,-15,-16,-17,39,39,39,39,39,39,39,39,-38,-39,-40,-41,-42,-43,-44,39,39,39,39,-18,-19,]),'mul':([23,25,30,31,32,33,34,35,36,53,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,84,85,88,89,90,91,],[-35,41,-31,-32,-33,-34,-36,-37,41,-20,-30,-21,41,41,41,-15,-16,-17,41,41,41,41,41,41,41,41,-38,-39,-40,-41,-42,-43,-44,41,41,41,41,-18,-19,]),'div':([23,25,30,31,32,33,34,35,36,53,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,84,85,88,89,90,91,],[-35,42,-31,-32,-33,-34,-36,-37,42,-20,-30,-21,42,42,42,-15,-16,-17,42,42,42,42,42,42,42,42,-38,-39,-40,-41,-42,-43,-44,42,42,42,42,-18,-19,]),'mod':([23,25,30,31,32,33,34,35,36,53,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,84,85,88,89,90,91,],[-35,43,-31,-32,-33,-34,-36,-37,43,-20,-30,-21,43,43,43,-15,-16,-17,43,43,43,43,43,43,43,43,-38,-39,-40,-41,-42,-43,-44,43,43,43,43,-18,-19,]),'igual':([23,25,30,31,32,33,34,35,36,53,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,84,85,88,89,90,91,],[-35,44,-31,-32,-33,-34,-36,-37,44,-20,-30,-21,44,-13,-14,-15,-16,-17,-22,-23,44,44,44,44,44,44,-38,-39,-40,-41,-42,-43,-44,44,44,44,44,-18,-19,]),'desigual':([23,25,30,31,32,33,34,35,36,53,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,84,85,88,89,90,91,],[-35,45,-31,-32,-33,-34,-36,-37,45,-20,-30,-21,45,-13,-14,-15,-16,-17,-22,-23,45,45,45,45,45,45,-38,-39,-40,-41,-42,-43,-44,45,45,45,45,-18,-19,]),'menor':([23,25,30,31,32,33,34,35,36,53,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,84,85,88,89,90,91,],[-35,46,-31,-32,-33,-34,-36,-37,46,-20,-30,-21,46,-13,-14,-15,-16,-17,-22,-23,-24,-25,-26,-27,46,46,-38,-39,-40,-41,-42,-43,-44,46,46,46,46,-18,-19,]),'menorIgual':([23,25,30,31,32,33,34,35,36,53,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,84,85,88,89,90,91,],[-35,47,-31,-32,-33,-34,-36,-37,47,-20,-30,-21,47,-13,-14,-15,-16,-17,-22,-23,-24,-25,-26,-27,47,47,-38,-39,-40,-41,-42,-43,-44,47,47,47,47,-18,-19,]),'mayor':([23,25,30,31,32,33,34,35,36,53,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,84,85,88,89,90,91,],[-35,48,-31,-32,-33,-34,-36,-37,48,-20,-30,-21,48,-13,-14,-15,-16,-17,-22,-23,-24,-25,-26,-27,48,48,-38,-39,-40,-41,-42,-43,-44,48,48,48,48,-18,-19,]),'mayorIgual':([23,25,30,31,32,33,34,35,36,53,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,84,85,88,89,90,91,],[-35,49,-31,-32,-33,-34,-36,-37,49,-20,-30,-21,49,-13,-14,-15,-16,-17,-22,-23,-24,-25,-26,-27,49,49,-38,-39,-40,-41,-42,-43,-44,49,49,49,49,-18,-19,]),'or':([23,25,30,31,32,33,34,35,36,53,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,84,85,88,89,90,91,],[-35,50,-31,-32,-33,-34,-36,-37,50,-20,-30,-21,50,-13,-14,-15,-16,-17,-22,-23,-24,-25,-26,-27,-28,-29,-38,-39,-40,-41,-42,-43,-44,50,50,50,50,-18,-19,]),'and':([23,25,30,31,32,33,34,35,36,53,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,84,85,88,89,90,91,],[-35,51,-31,-32,-33,-34,-36,-37,51,-20,-30,-21,51,-13,-14,-15,-16,-17,-22,-23,-24,-25,-26,-27,51,-29,-38,-39,-40,-41,-42,-43,-44,51,51,51,51,-18,-19,]),'as':([23,25,30,31,32,33,34,35,36,53,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,84,85,88,89,90,91,],[-35,52,-31,-32,-33,-34,-36,-37,52,-20,-30,-21,52,-13,-14,-15,-16,-17,-22,-23,-24,-25,-26,-27,-28,-29,-38,-39,-40,-41,-42,-43,-44,52,52,52,52,-18,-19,]),'ddosptos':([27,28,],[54,55,]),'bool':([52,],[76,]),'char':([52,],[77,]),'str':([52,],[78,]),'string':([52,],[79,]),'pow':([54,],[80,]),'powf':([55,],[81,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'INICIO':([0,],[1,]),'SENTENCIAS':([0,],[2,]),'SENTENCIA':([0,2,],[3,6,]),'DMAIN':([0,2,],[4,4,]),'INSTRUCCIONES':([10,],[11,]),'INSTRUCCION':([10,11,],[12,16,]),'PRINT':([10,11,],[13,13,]),'PVALORES':([20,],[24,]),'EXPRESION':([20,22,26,29,37,39,40,41,42,43,44,45,46,47,48,49,50,51,82,83,86,87,],[25,36,53,56,58,60,61,62,63,64,65,66,67,68,69,70,71,72,84,85,88,89,]),'TIPO':([52,],[73,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> INICIO","S'",1,None,None,None),
  ('INICIO -> SENTENCIAS','INICIO',1,'p_INICIO','Analizador.py',190),
  ('SENTENCIAS -> SENTENCIAS SENTENCIA','SENTENCIAS',2,'p_SENTENCIAS','Analizador.py',204),
  ('SENTENCIAS -> SENTENCIA','SENTENCIAS',1,'p_SENTENCIAS','Analizador.py',205),
  ('SENTENCIA -> DMAIN','SENTENCIA',1,'p_SENTENCIAS_MAIN','Analizador.py',215),
  ('DMAIN -> fn main parA parC llavA INSTRUCCIONES llavC','DMAIN',7,'p_MAIN','Analizador.py',221),
  ('INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION','INSTRUCCIONES',2,'p_INSTRUCCIONES','Analizador.py',227),
  ('INSTRUCCIONES -> INSTRUCCION','INSTRUCCIONES',1,'p_INSTRUCCIONES','Analizador.py',228),
  ('INSTRUCCION -> PRINT','INSTRUCCION',1,'p_INSTRUCCION_PRINT','Analizador.py',238),
  ('PRINT -> print parA cadena parC ptocoma','PRINT',5,'p_PRINT_CADENA','Analizador.py',244),
  ('PRINT -> print parA cadena coma PVALORES parC ptocoma','PRINT',7,'p_PRINT_OTROS','Analizador.py',249),
  ('PVALORES -> PVALORES coma EXPRESION','PVALORES',3,'p_PRINT_VALORES','Analizador.py',254),
  ('PVALORES -> EXPRESION','PVALORES',1,'p_PRINT_VALORES','Analizador.py',255),
  ('EXPRESION -> EXPRESION mas EXPRESION','EXPRESION',3,'p_EXPRESION_SUMA','Analizador.py',265),
  ('EXPRESION -> EXPRESION menos EXPRESION','EXPRESION',3,'p_EXPRESION_RESTA','Analizador.py',270),
  ('EXPRESION -> EXPRESION mul EXPRESION','EXPRESION',3,'p_EXPRESION_MULTIPLICACION','Analizador.py',275),
  ('EXPRESION -> EXPRESION div EXPRESION','EXPRESION',3,'p_EXPRESION_DIVISION','Analizador.py',280),
  ('EXPRESION -> EXPRESION mod EXPRESION','EXPRESION',3,'p_EXPRESION_MOD','Analizador.py',285),
  ('EXPRESION -> i64 ddosptos pow parA EXPRESION coma EXPRESION parC','EXPRESION',8,'p_EXPRESION_POTENCIAI','Analizador.py',290),
  ('EXPRESION -> f64 ddosptos powf parA EXPRESION coma EXPRESION parC','EXPRESION',8,'p_EXPRESION_POTENCIAF','Analizador.py',295),
  ('EXPRESION -> menos EXPRESION','EXPRESION',2,'p_EXPRESION_NEGATIVO','Analizador.py',300),
  ('EXPRESION -> parA EXPRESION parC','EXPRESION',3,'p_EXPRESION_PARENTESIS','Analizador.py',305),
  ('EXPRESION -> EXPRESION igual EXPRESION','EXPRESION',3,'p_EXPRESION_IGUAL','Analizador.py',310),
  ('EXPRESION -> EXPRESION desigual EXPRESION','EXPRESION',3,'p_EXPRESION_DESIGUAL','Analizador.py',315),
  ('EXPRESION -> EXPRESION menor EXPRESION','EXPRESION',3,'p_EXPRESION_MENOR','Analizador.py',320),
  ('EXPRESION -> EXPRESION menorIgual EXPRESION','EXPRESION',3,'p_EXPRESION_MENORIGUAL','Analizador.py',325),
  ('EXPRESION -> EXPRESION mayor EXPRESION','EXPRESION',3,'p_EXPRESION_MAYOR','Analizador.py',330),
  ('EXPRESION -> EXPRESION mayorIgual EXPRESION','EXPRESION',3,'p_EXPRESION_MAYORIGUAL','Analizador.py',335),
  ('EXPRESION -> EXPRESION or EXPRESION','EXPRESION',3,'p_EXPRESION_OR','Analizador.py',340),
  ('EXPRESION -> EXPRESION and EXPRESION','EXPRESION',3,'p_EXPRESION_AND','Analizador.py',345),
  ('EXPRESION -> not EXPRESION','EXPRESION',2,'p_EXPRESION_NOT','Analizador.py',350),
  ('EXPRESION -> entero','EXPRESION',1,'p_EXPRESION_ENTERO','Analizador.py',355),
  ('EXPRESION -> float','EXPRESION',1,'p_EXPRESION_FLOAT','Analizador.py',360),
  ('EXPRESION -> true','EXPRESION',1,'p_EXPRESION_TRUE','Analizador.py',365),
  ('EXPRESION -> false','EXPRESION',1,'p_EXPRESION_FALSE','Analizador.py',370),
  ('EXPRESION -> cadena','EXPRESION',1,'p_EXPRESION_TEXTO','Analizador.py',375),
  ('EXPRESION -> car','EXPRESION',1,'p_EXPRESION_CHAR','Analizador.py',380),
  ('EXPRESION -> id','EXPRESION',1,'p_EXPRESION_ID','Analizador.py',385),
  ('EXPRESION -> EXPRESION as TIPO','EXPRESION',3,'p_EXPRESION_CASTEO','Analizador.py',390),
  ('TIPO -> i64','TIPO',1,'p_TIPO_I64','Analizador.py',396),
  ('TIPO -> f64','TIPO',1,'p_TIPO_F64','Analizador.py',401),
  ('TIPO -> bool','TIPO',1,'p_TIPO_BOOL','Analizador.py',406),
  ('TIPO -> char','TIPO',1,'p_TIPO_CHAR','Analizador.py',411),
  ('TIPO -> str','TIPO',1,'p_TIPO_STR','Analizador.py',416),
  ('TIPO -> string','TIPO',1,'p_TIPO_STRING','Analizador.py',421),
]
